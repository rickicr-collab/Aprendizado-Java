MÉTODOS SET:

 - É UM MÉTODO QUE NÃO PERMITE ELEMENTOS DUPLICADOS E POSSUI ALTO DESEMPENHO EM VARIAS OPERAÇÕES EM BIG O COMPARADO COM AS LISTAS.
 - O SET POSSUI ALGUMS MÉTODOS HERDADOS DA CLASSE OBJECT MAIS NÃO É INDEXIDADO.
 - O MÉTODO SET NÃO POSSUE QUALQUER TIPO DE ORDEM.
 
 OBS1: SE VOCÊ DESEJA MANTER A ORDEM DE INSERÇÃO DOS OBJETOS DENTRO DA LISTA É POSSIVEL UTILIZANDO P MÉTODO LINKEDHASHSET();
 OBS2: O MÉTODO HASHSET(); NÃO POSSUI INDICE PARA ORDEM 
 
 ----------------------------------------------------------------------------------------------------------------------------------
 MÉTODOS NAVIGABLESET E TREESET:
 
 NAVEGABLESET POSSUI CARACTERISTICAS QUE A INTERFACE SET NÃO POSSUI JUNTAMENTE COM O USO DO MÉTODO TREESET.
  - OBS: SEMPRE QUE VOCÊ DESEJAR UTILIZAR O MÉTODO TREESET() É NECESSÁRIO TER ANTECIPADAMENTE IMPLEMENTADO A 
  INTERFACE COMPARABLE / COMPARATOR NA CLASSE A SER UTILIZADA CASO CONTRARIO IRÁ GERAR UM ERRO COM UMA EXCEÇÃO EM TEMPO DE 
  EXECUÇÃO CHAMADO CLASSCASTEXCEPTION.
  - O MÉTODO TREESET JA POSSUI UMA ORDENAÇÃO EM SEU MÉTODO DEPENDENDO DE COMO FOI ATRIBUIDO O FILTRO PARA COMPARAÇÃO
  PODE VARIAR A FORMA DE ORDENAR OS OBJETOS 
  - O NAVIGABELSET MANTEM AS MESMAS FUNCIONALIDADES DO SET ONDE NÃO ACEITA NUMEROS DUPLICADOS.
 
 * FUNCIONALIDADES DO NAVIGABLESET E TREESET *
 - PARA BUSCAR O MENOR PRODUTO A PARTIR DO OBJETO QUE PASSADOS COMO PARAMETRO MÉTODO LOWER();
 - PARA BUSCAR SE ELE É MENOR OU IGUAL A O ULTIMO VALOR PASSADO COMO PARAMETRO USA-SE O MÉTODO FLOOR();
 - PARA BUSCAR SE ELE É MAIOR A O ULTIMO VALOR PASSADO COMO PARAMETRO USA-SE O MÉTODO HIGHER();
 - PARA BUSCAR SE ELE É MAIOR OU IGUAL A O ULTIMO VALOR PASSADO COMO PARAMETRO USA-SE MÉTODO CEILING();
 - PARA COLOCAR A LISTA NUMA ORDEM INVERSA USASSE O MÉTODO DESCENDINGSET();
 - PARA BUSCAR O PRIMEIRO ITEM DA LISTA E REMOVE-LO AO MESMO TEMPO USA-SE O MÉTODO POLLFIRST();
 - PARA BUSCAR O ULTIMO ITEM DA LISTA E REMOVE-LO AO MESMO TEMPO USA-SE O MÉTODO POLLLAST();
 
 
 
